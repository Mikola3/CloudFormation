AWSTemplateFormatVersion: 2010-09-09
Description: Debug CloudFormation
Mappings:
  AMI:
    us-east-1:
      AMI: ami-b70554c8
    eu-central-1:
      AMI: ami-7c4f7097
    ap-southeast-2:
      AMI: ami-39f8215b
    ap-northeast-1:
      AMI: ami-e99f4896
Parameters:
  AllowedCidr:
    Type: String
    Default: 0.0.0.0/0
  KeyName:
    Type: String
    Default: ""
  VPC:
    Type: String
  PublicSubnet0:
    Type: String
  PublicSubnet1:
    Type: String
  PublicSubnet2:
    Type: String
  DefaultSecurityGroup:
    Type: String
Conditions:
  KeyName: !Equals [ !Ref KeyName, "" ]
Resources:
  DebugInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
      - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
  DebugInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
      - !Ref DebugInstanceRole
  DebugSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Debug (Port 22)
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref AllowedCidr
  DebugLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      KeyName: !If [ KeyName, !Ref "AWS::NoValue", !Ref KeyName ]
      SecurityGroups:
      - !Ref DefaultSecurityGroup
      - !Ref DebugSecurityGroup
      ImageId: !FindInMap [ AMI, !Ref "AWS::Region", AMI ]
      IamInstanceProfile: !Ref DebugInstanceProfile
      InstanceType: t2.micro
      BlockDeviceMappings:
      - DeviceName: /dev/xvda
        Ebs:
          VolumeSize: 20
          VolumeType: gp2
      UserData:
        Fn::Base64: !Sub
        - |+
            #cloud-config

            runcmd:
              - set -x
              - yum install -y docker
              - echo
              - chkconfig docker on
              - service docker start
              - echo

            output: { all: '| tee -a /var/log/cloud-config.log' }
        - { Info: "Info" }
  DebugAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref DebugLaunchConfiguration
      MinSize: 1
      MaxSize: 1
      DesiredCapacity: 1
      VPCZoneIdentifier:
      - !Ref PublicSubnet0
      - !Ref PublicSubnet1
      - !Ref PublicSubnet2
      Tags:
      - Key: Name
        Value: !Join [ "-", [ !Ref "AWS::StackName", "Debug" ] ]
        PropagateAtLaunch: true
